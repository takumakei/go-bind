// Package bind provides functions that bind arguments to a function.
//
// Code generated by gen-bind. DO NOT EDIT.
package bind

// P1R1 returns the no argument function that calls fn with the specified argument and returns one value.
func P1R1[P1, R1 any](fn func(p1 P1) R1, p1 P1) func() R1 {
	return func() R1 { return fn(p1) }
}

// P1R2 returns the no argument function that calls fn with the specified argument and returns 2 values.
func P1R2[P1, R1, R2 any](fn func(p1 P1) (R1, R2), p1 P1) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1) }
}

// P1R3 returns the no argument function that calls fn with the specified argument and returns 3 values.
func P1R3[P1, R1, R2, R3 any](fn func(p1 P1) (R1, R2, R3), p1 P1) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1) }
}

// P1R4 returns the no argument function that calls fn with the specified argument and returns 4 values.
func P1R4[P1, R1, R2, R3, R4 any](fn func(p1 P1) (R1, R2, R3, R4), p1 P1) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1) }
}

// P1R5 returns the no argument function that calls fn with the specified argument and returns 5 values.
func P1R5[P1, R1, R2, R3, R4, R5 any](fn func(p1 P1) (R1, R2, R3, R4, R5), p1 P1) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1) }
}

// P1R6 returns the no argument function that calls fn with the specified argument and returns 6 values.
func P1R6[P1, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1) (R1, R2, R3, R4, R5, R6), p1 P1) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1) }
}

// P1R7 returns the no argument function that calls fn with the specified argument and returns 7 values.
func P1R7[P1, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1) (R1, R2, R3, R4, R5, R6, R7), p1 P1) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1) }
}

// P1R8 returns the no argument function that calls fn with the specified argument and returns 8 values.
func P1R8[P1, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1) }
}

// P1R9 returns the no argument function that calls fn with the specified argument and returns 9 values.
func P1R9[P1, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1) }
}

// P2R1 returns the no argument function that calls fn with the 2 specified arguments and returns one value.
func P2R1[P1, P2, R1 any](fn func(p1 P1, p2 P2) R1, p1 P1, p2 P2) func() R1 {
	return func() R1 { return fn(p1, p2) }
}

// P2R2 returns the no argument function that calls fn with the 2 specified arguments and returns 2 values.
func P2R2[P1, P2, R1, R2 any](fn func(p1 P1, p2 P2) (R1, R2), p1 P1, p2 P2) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2) }
}

// P2R3 returns the no argument function that calls fn with the 2 specified arguments and returns 3 values.
func P2R3[P1, P2, R1, R2, R3 any](fn func(p1 P1, p2 P2) (R1, R2, R3), p1 P1, p2 P2) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2) }
}

// P2R4 returns the no argument function that calls fn with the 2 specified arguments and returns 4 values.
func P2R4[P1, P2, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2) (R1, R2, R3, R4), p1 P1, p2 P2) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2) }
}

// P2R5 returns the no argument function that calls fn with the 2 specified arguments and returns 5 values.
func P2R5[P1, P2, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2) (R1, R2, R3, R4, R5), p1 P1, p2 P2) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2) }
}

// P2R6 returns the no argument function that calls fn with the 2 specified arguments and returns 6 values.
func P2R6[P1, P2, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2) }
}

// P2R7 returns the no argument function that calls fn with the 2 specified arguments and returns 7 values.
func P2R7[P1, P2, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2) }
}

// P2R8 returns the no argument function that calls fn with the 2 specified arguments and returns 8 values.
func P2R8[P1, P2, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2) }
}

// P2R9 returns the no argument function that calls fn with the 2 specified arguments and returns 9 values.
func P2R9[P1, P2, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2) }
}

// P3R1 returns the no argument function that calls fn with the 3 specified arguments and returns one value.
func P3R1[P1, P2, P3, R1 any](fn func(p1 P1, p2 P2, p3 P3) R1, p1 P1, p2 P2, p3 P3) func() R1 {
	return func() R1 { return fn(p1, p2, p3) }
}

// P3R2 returns the no argument function that calls fn with the 3 specified arguments and returns 2 values.
func P3R2[P1, P2, P3, R1, R2 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2), p1 P1, p2 P2, p3 P3) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2, p3) }
}

// P3R3 returns the no argument function that calls fn with the 3 specified arguments and returns 3 values.
func P3R3[P1, P2, P3, R1, R2, R3 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2, R3), p1 P1, p2 P2, p3 P3) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2, p3) }
}

// P3R4 returns the no argument function that calls fn with the 3 specified arguments and returns 4 values.
func P3R4[P1, P2, P3, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2, R3, R4), p1 P1, p2 P2, p3 P3) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2, p3) }
}

// P3R5 returns the no argument function that calls fn with the 3 specified arguments and returns 5 values.
func P3R5[P1, P2, P3, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2, R3, R4, R5), p1 P1, p2 P2, p3 P3) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2, p3) }
}

// P3R6 returns the no argument function that calls fn with the 3 specified arguments and returns 6 values.
func P3R6[P1, P2, P3, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2, p3 P3) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2, p3) }
}

// P3R7 returns the no argument function that calls fn with the 3 specified arguments and returns 7 values.
func P3R7[P1, P2, P3, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2, p3 P3) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2, p3) }
}

// P3R8 returns the no argument function that calls fn with the 3 specified arguments and returns 8 values.
func P3R8[P1, P2, P3, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2, p3 P3) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2, p3) }
}

// P3R9 returns the no argument function that calls fn with the 3 specified arguments and returns 9 values.
func P3R9[P1, P2, P3, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2, p3 P3) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2, p3 P3) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2, p3) }
}

// P4R1 returns the no argument function that calls fn with the 4 specified arguments and returns one value.
func P4R1[P1, P2, P3, P4, R1 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) R1, p1 P1, p2 P2, p3 P3, p4 P4) func() R1 {
	return func() R1 { return fn(p1, p2, p3, p4) }
}

// P4R2 returns the no argument function that calls fn with the 4 specified arguments and returns 2 values.
func P4R2[P1, P2, P3, P4, R1, R2 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2, p3, p4) }
}

// P4R3 returns the no argument function that calls fn with the 4 specified arguments and returns 3 values.
func P4R3[P1, P2, P3, P4, R1, R2, R3 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2, R3), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2, p3, p4) }
}

// P4R4 returns the no argument function that calls fn with the 4 specified arguments and returns 4 values.
func P4R4[P1, P2, P3, P4, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2, R3, R4), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2, p3, p4) }
}

// P4R5 returns the no argument function that calls fn with the 4 specified arguments and returns 5 values.
func P4R5[P1, P2, P3, P4, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2, R3, R4, R5), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2, p3, p4) }
}

// P4R6 returns the no argument function that calls fn with the 4 specified arguments and returns 6 values.
func P4R6[P1, P2, P3, P4, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2, p3, p4) }
}

// P4R7 returns the no argument function that calls fn with the 4 specified arguments and returns 7 values.
func P4R7[P1, P2, P3, P4, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2, p3, p4) }
}

// P4R8 returns the no argument function that calls fn with the 4 specified arguments and returns 8 values.
func P4R8[P1, P2, P3, P4, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2, p3, p4) }
}

// P4R9 returns the no argument function that calls fn with the 4 specified arguments and returns 9 values.
func P4R9[P1, P2, P3, P4, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2, p3 P3, p4 P4) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2, p3, p4) }
}

// P5R1 returns the no argument function that calls fn with the 5 specified arguments and returns one value.
func P5R1[P1, P2, P3, P4, P5, R1 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) R1, p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() R1 {
	return func() R1 { return fn(p1, p2, p3, p4, p5) }
}

// P5R2 returns the no argument function that calls fn with the 5 specified arguments and returns 2 values.
func P5R2[P1, P2, P3, P4, P5, R1, R2 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2, p3, p4, p5) }
}

// P5R3 returns the no argument function that calls fn with the 5 specified arguments and returns 3 values.
func P5R3[P1, P2, P3, P4, P5, R1, R2, R3 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2, R3), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2, p3, p4, p5) }
}

// P5R4 returns the no argument function that calls fn with the 5 specified arguments and returns 4 values.
func P5R4[P1, P2, P3, P4, P5, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2, R3, R4), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2, p3, p4, p5) }
}

// P5R5 returns the no argument function that calls fn with the 5 specified arguments and returns 5 values.
func P5R5[P1, P2, P3, P4, P5, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2, R3, R4, R5), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2, p3, p4, p5) }
}

// P5R6 returns the no argument function that calls fn with the 5 specified arguments and returns 6 values.
func P5R6[P1, P2, P3, P4, P5, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2, p3, p4, p5) }
}

// P5R7 returns the no argument function that calls fn with the 5 specified arguments and returns 7 values.
func P5R7[P1, P2, P3, P4, P5, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2, p3, p4, p5) }
}

// P5R8 returns the no argument function that calls fn with the 5 specified arguments and returns 8 values.
func P5R8[P1, P2, P3, P4, P5, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2, p3, p4, p5) }
}

// P5R9 returns the no argument function that calls fn with the 5 specified arguments and returns 9 values.
func P5R9[P1, P2, P3, P4, P5, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2, p3, p4, p5) }
}

// P6R1 returns the no argument function that calls fn with the 6 specified arguments and returns one value.
func P6R1[P1, P2, P3, P4, P5, P6, R1 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) R1, p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() R1 {
	return func() R1 { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R2 returns the no argument function that calls fn with the 6 specified arguments and returns 2 values.
func P6R2[P1, P2, P3, P4, P5, P6, R1, R2 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R3 returns the no argument function that calls fn with the 6 specified arguments and returns 3 values.
func P6R3[P1, P2, P3, P4, P5, P6, R1, R2, R3 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2, R3), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R4 returns the no argument function that calls fn with the 6 specified arguments and returns 4 values.
func P6R4[P1, P2, P3, P4, P5, P6, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2, R3, R4), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R5 returns the no argument function that calls fn with the 6 specified arguments and returns 5 values.
func P6R5[P1, P2, P3, P4, P5, P6, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2, R3, R4, R5), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R6 returns the no argument function that calls fn with the 6 specified arguments and returns 6 values.
func P6R6[P1, P2, P3, P4, P5, P6, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R7 returns the no argument function that calls fn with the 6 specified arguments and returns 7 values.
func P6R7[P1, P2, P3, P4, P5, P6, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R8 returns the no argument function that calls fn with the 6 specified arguments and returns 8 values.
func P6R8[P1, P2, P3, P4, P5, P6, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P6R9 returns the no argument function that calls fn with the 6 specified arguments and returns 9 values.
func P6R9[P1, P2, P3, P4, P5, P6, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2, p3, p4, p5, p6) }
}

// P7R1 returns the no argument function that calls fn with the 7 specified arguments and returns one value.
func P7R1[P1, P2, P3, P4, P5, P6, P7, R1 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) R1, p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() R1 {
	return func() R1 { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R2 returns the no argument function that calls fn with the 7 specified arguments and returns 2 values.
func P7R2[P1, P2, P3, P4, P5, P6, P7, R1, R2 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R3 returns the no argument function that calls fn with the 7 specified arguments and returns 3 values.
func P7R3[P1, P2, P3, P4, P5, P6, P7, R1, R2, R3 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2, R3), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R4 returns the no argument function that calls fn with the 7 specified arguments and returns 4 values.
func P7R4[P1, P2, P3, P4, P5, P6, P7, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2, R3, R4), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R5 returns the no argument function that calls fn with the 7 specified arguments and returns 5 values.
func P7R5[P1, P2, P3, P4, P5, P6, P7, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2, R3, R4, R5), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R6 returns the no argument function that calls fn with the 7 specified arguments and returns 6 values.
func P7R6[P1, P2, P3, P4, P5, P6, P7, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R7 returns the no argument function that calls fn with the 7 specified arguments and returns 7 values.
func P7R7[P1, P2, P3, P4, P5, P6, P7, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R8 returns the no argument function that calls fn with the 7 specified arguments and returns 8 values.
func P7R8[P1, P2, P3, P4, P5, P6, P7, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P7R9 returns the no argument function that calls fn with the 7 specified arguments and returns 9 values.
func P7R9[P1, P2, P3, P4, P5, P6, P7, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2, p3, p4, p5, p6, p7) }
}

// P8R1 returns the no argument function that calls fn with the 8 specified arguments and returns one value.
func P8R1[P1, P2, P3, P4, P5, P6, P7, P8, R1 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) R1, p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() R1 {
	return func() R1 { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R2 returns the no argument function that calls fn with the 8 specified arguments and returns 2 values.
func P8R2[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R3 returns the no argument function that calls fn with the 8 specified arguments and returns 3 values.
func P8R3[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2, R3 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2, R3), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R4 returns the no argument function that calls fn with the 8 specified arguments and returns 4 values.
func P8R4[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2, R3, R4), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R5 returns the no argument function that calls fn with the 8 specified arguments and returns 5 values.
func P8R5[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2, R3, R4, R5), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R6 returns the no argument function that calls fn with the 8 specified arguments and returns 6 values.
func P8R6[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R7 returns the no argument function that calls fn with the 8 specified arguments and returns 7 values.
func P8R7[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R8 returns the no argument function that calls fn with the 8 specified arguments and returns 8 values.
func P8R8[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P8R9 returns the no argument function that calls fn with the 8 specified arguments and returns 9 values.
func P8R9[P1, P2, P3, P4, P5, P6, P7, P8, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2, p3, p4, p5, p6, p7, p8) }
}

// P9R1 returns the no argument function that calls fn with the 9 specified arguments and returns one value.
func P9R1[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) R1, p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() R1 {
	return func() R1 { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R2 returns the no argument function that calls fn with the 9 specified arguments and returns 2 values.
func P9R2[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2) {
	return func() (R1, R2) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R3 returns the no argument function that calls fn with the 9 specified arguments and returns 3 values.
func P9R3[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2, R3 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2, R3), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2, R3) {
	return func() (R1, R2, R3) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R4 returns the no argument function that calls fn with the 9 specified arguments and returns 4 values.
func P9R4[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2, R3, R4 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2, R3, R4), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2, R3, R4) {
	return func() (R1, R2, R3, R4) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R5 returns the no argument function that calls fn with the 9 specified arguments and returns 5 values.
func P9R5[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2, R3, R4, R5 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2, R3, R4, R5), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2, R3, R4, R5) {
	return func() (R1, R2, R3, R4, R5) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R6 returns the no argument function that calls fn with the 9 specified arguments and returns 6 values.
func P9R6[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2, R3, R4, R5, R6 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2, R3, R4, R5, R6), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2, R3, R4, R5, R6) {
	return func() (R1, R2, R3, R4, R5, R6) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R7 returns the no argument function that calls fn with the 9 specified arguments and returns 7 values.
func P9R7[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2, R3, R4, R5, R6, R7 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2, R3, R4, R5, R6, R7), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2, R3, R4, R5, R6, R7) {
	return func() (R1, R2, R3, R4, R5, R6, R7) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R8 returns the no argument function that calls fn with the 9 specified arguments and returns 8 values.
func P9R8[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2, R3, R4, R5, R6, R7, R8 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2, R3, R4, R5, R6, R7, R8), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2, R3, R4, R5, R6, R7, R8) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}

// P9R9 returns the no argument function that calls fn with the 9 specified arguments and returns 9 values.
func P9R9[P1, P2, P3, P4, P5, P6, P7, P8, P9, R1, R2, R3, R4, R5, R6, R7, R8, R9 any](fn func(p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) (R1, R2, R3, R4, R5, R6, R7, R8, R9), p1 P1, p2 P2, p3 P3, p4 P4, p5 P5, p6 P6, p7 P7, p8 P8, p9 P9) func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) {
	return func() (R1, R2, R3, R4, R5, R6, R7, R8, R9) { return fn(p1, p2, p3, p4, p5, p6, p7, p8, p9) }
}
